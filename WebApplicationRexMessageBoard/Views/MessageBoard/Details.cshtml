@model WebApplicationRexMessageBoard.Models.MessageModels

@using Microsoft.AspNet.Identity


@{
    ViewBag.Title = "Details";
    List<WebApplicationRexMessageBoard.Models.MessageModels> models = ViewBag.messageList;
    WebApplicationRexMessageBoard.Models.MessageBoardModel detailModel = ViewBag.MessageBoardModel;
}

@section scripts {

    @Scripts.Render("~/bundles/messageFunction")
    <script>
        var token = $('input[name="__RequestVerificationToken"]').val();

        function deleteMessage() {
            var reply = confirm('確認刪除留言?')
            if (!reply) {
                return;
            }
            deleteForm.submit();
        }

    </script>
}

@Styles.Render("~/Content/message-board")

<div class="col-sm-12 rex-body">
    <div class="bs-calltoaction bs-calltoaction-primary">
        <div class="col">
            <div class="row cta-contents">
                <h1 class="cta-title">
                    @Html.DisplayFor(model => detailModel.Title)
                </h1>
            </div>
            <div class="row cta-desc">
                <p class="col-md-12 lead">@Html.DisplayFor(model => detailModel.Content)</p>
            </div>
            <div class="row">
                @if (Request.IsAuthenticated && detailModel.User.Id == User.Identity.GetUserId())
                {
                    <div class="col-md-2 cta-button">
                        @Html.ActionLink("編輯", "Edit", new { id = detailModel.ID }, htmlAttributes: new { @class = "btn btn-lg btn-block btn-primary" })
                    </div>
                    using (Html.BeginForm("Delete", "MessageBoard", new { id = detailModel.ID }, FormMethod.Post, new { id = "deleteForm" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="col-md-2 cta-button">
                            <a href="javascript:void(0)" class="btn btn-lg btn-block btn-primary" onclick='deleteMessage();'>刪除</a>
                        </div>
                    }

                }


                <div class="col-md-4 pull-right">
                    <span class="col pull-right rex-message-createtime">@Html.DisplayFor(model => detailModel.CreateTime)</span>
                    <span class="col pull-right rex-message-username">@Html.DisplayFor(model => detailModel.User.UserName)</span>
                </div>
            </div>
        </div>
    </div>

    <hr />

    @foreach (var item in models)
    {
        <div class="bs-calltoaction bs-calltoaction-info" id="reply_@item.ID">
            <div class="col">
                <div class="row cta-desc">
                    <p class="col-md-12 lead">@Html.DisplayFor(modelItem => item.Content)</p>
                </div>
                <div class="row">
                    @if (Request.IsAuthenticated && item.User.Id == User.Identity.GetUserId())
                    {
                        <div class="col-md-2 cta-button">
                            @Html.ActionLink("編輯", "MessageEdit", new { id = item.ID }, htmlAttributes: new { @class = "btn btn-lg btn-block btn-info" })
                        </div>
                        <div class="col-md-2 cta-button">
                            <a href="javascript:void(0)" class="btn btn-lg btn-block btn-info" onclick='$.fn.deleteReply(@(item.ID), $("@("#reply_"+item.ID)"), token);'>刪除</a>
                        </div>
                    }


                    <div class="col-md-4 pull-right">
                        <span class="col pull-right rex-message-createtime">@Html.DisplayFor(modelItem => item.CreateTime)</span>
                        <span class="col pull-right rex-message-username">@Html.DisplayFor(modelItem => item.User.UserName)</span>
                    </div>
                </div>
            </div>
        </div>
    }

</div>

<footer class="navbar navbar-default navbar-fixed-bottom" role="navigation">
    @using (Html.BeginForm("CreateMessage", "MessageBoard", new { id = detailModel.ID }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control rex-create-textarea" })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="回覆" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</footer>