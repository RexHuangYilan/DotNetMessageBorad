@model WebApplicationRexMessageBoard.Models.MessageBoardModel
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Index";
    IEnumerable<WebApplicationRexMessageBoard.Models.MessageBoardModel> models = ViewBag.messageList;
}

<h2>Index</h2>

@using (Html.BeginForm("Create", "MessageBoard"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>發言</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.User.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Content)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreateTime)
        </th>
        <th></th>
    </tr>

    @foreach (var item in models)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.User.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreateTime)
            </td>
            <td>
                @if (Request.IsAuthenticated && item.User.Id == User.Identity.GetUserId())
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) @(" | ")
                }

                @Html.ActionLink("Details", "Details", new { id = item.ID })

                @if (Request.IsAuthenticated && item.User.Id == User.Identity.GetUserId())
                {
                    @(" | ") @Html.ActionLink("Delete", "Delete", new { id = item.ID }) @(" | ")
                }

            </td>

        </tr>
    }

</table>
